using System;
using System.IO;
using System.Globalization;

namespace Wav2Zebra2Osc
{
	/// <summary>
	/// Class to read and write Zebra2 Oscillator Presets
	/// Typically stored in the Zebra2.data\Data\Modules\Oscillator folder
	/// </summary>
	public static class Zebra2OSCPreset
	{
		public static float[][] Read(string zebraPresetFilePath) {
			return null;
		}
		
		public static bool Write(float[][] soundData, bool[] enabledSlots, string zebraPresetFilePath) {
			
			try {
				using (var writer = new StreamWriter(zebraPresetFilePath)) {
					
					writer.WriteLine("/*@meta");
					writer.WriteLine("Author: Wav2Zebra2Osc");
					writer.WriteLine("Description: Generated by Wav2Zebra2Osc version {0}", MainForm.VERSION);
					writer.WriteLine("             Copyleft Per Ivar Nerseth, 2015");
					writer.WriteLine("             https://github.com/perivar/AudioVSTToolbox/releases");
					writer.WriteLine("*/");
					writer.WriteLine();

					writer.WriteLine("#defaults=no");
					writer.WriteLine("#cm=OSC");
					writer.WriteLine("Wave=2"); // 2-Geoblend, 3-Spectroblend
					writer.WriteLine("<?");
					writer.WriteLine();
					writer.WriteLine("float Wave[ 128 ];");

					for (int j = 0; j < 16; j++) {
						if (enabledSlots[j]) {
							for (int i = 0; i < 128; i++) {
								float sampleValue = soundData[j][i];
								if ((soundData[j][i] < 0.001f)
								    && (soundData[j][i] > -0.001f)) {
									sampleValue = 0;
								}
								writer.WriteLine(String.Format(CultureInfo.InvariantCulture, "Wave[ {0} ] = {1:0.000};", i, sampleValue));
							}
							writer.WriteLine("Selected.WaveTable.set( {0} , Wave );", j + 1);
							writer.WriteLine();
						}
					}
					writer.WriteLine("?>");
				}
				
				return true;
			} catch (IOException e) {
				System.Diagnostics.Debug.WriteLine(e);
			}
			
			return false;
		}
	}
}
